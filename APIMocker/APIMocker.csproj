<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <OutputType>Exe</OutputType>
    <PublishTrimmed>true</PublishTrimmed>
    <PublishReadyToRun>true</PublishReadyToRun>
    <PublishSingleFile>true</PublishSingleFile>

    <Title>APIMocker</Title>
    <PackageId>APIMocker</PackageId>
    <Version>1.5.0</Version>
    <Authors>Mohsen Kokabi</Authors>
    <owners>Mohsen Kokabi</owners>
    <Company>MoKo Solution</Company>
    <IsPackable>true</IsPackable>
    <PackageTags>API test</PackageTags>
    <PackageIcon>icon.png</PackageIcon>
    <Description>
    An test application for mocking APIs based on the configuration. 
    For more help please visit https://github.com/mkokabi/apiMocker
    </Description>
  </PropertyGroup>
  <Choose>
    <When Condition="$([MSBuild]::IsOSPlatform('OSX'))">
      <PropertyGroup>
        <RuntimeIdentifier>osx-x64</RuntimeIdentifier>
      </PropertyGroup>
    </When>
    <When Condition="$([MSBuild]::IsOSPlatform('Linux'))">
      <PropertyGroup>
        <RuntimeIdentifier>linux-x64</RuntimeIdentifier>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <RuntimeIdentifier>win-x64</RuntimeIdentifier>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  <ItemGroup>
    <None Include="appsettings.json" CopyToOutputDirectory="Always" />
    <None Include="icon.png" Pack="true" PackagePath=""/>
    <None Include="Exec\APIMocker.exe" Pack="true" PackagePath="Exec" Condition="$([MSBuild]::IsOSPlatform('Windows'))"/>
  </ItemGroup>
  <Target Name="CopyWinExeOnBuild" AfterTargets="AfterPublish" 
    Condition="$([MSBuild]::IsOSPlatform('Windows')) And Exists('bin\Debug\netcoreapp3.1')">
    <Copy SourceFiles="bin\Debug\netcoreapp3.1\win-x64\publish\APIMocker.exe" DestinationFolder="WindowsExec" />
    <Copy SourceFiles="bin\Debug\netcoreapp3.1\win-x64\publish\appsettings.json" DestinationFolder="WindowsExec" />
    <ZipDirectory
      SourceDirectory="WindowsExec"
      DestinationFile="WindowsExecZip"
      Overwrite="true"
    />
  </Target>
  <Target Name="PublishOnMac" AfterTargets="AfterPublish" 
    Condition="$([MSBuild]::IsOSPlatform('OSX')) And !Exists('bin\Debug\netcoreapp3.1\osx-x64\publish')">
    <Exec Command="dotnet publish -r osx-x64 --self-contained true /p:PublishTrimmed=true /p:PublishSingleFile=true" ContinueOnError="false"/>
  </Target>
  <Target Name="CopyMacExeOnBuild" AfterTargets="AfterPublish" 
    Condition="$([MSBuild]::IsOSPlatform('OSX')) And Exists('bin\Debug\netcoreapp3.1\osx-x64\publish')">
    <Copy SourceFiles="bin\Debug\netcoreapp3.1\osx-x64\publish\APIMocker" DestinationFolder="MacExec" />
    <Copy SourceFiles="bin\Debug\netcoreapp3.1\osx-x64\publish\appsettings.json" DestinationFolder="MacExec" />
    <ZipDirectory
      SourceDirectory="MacExec"
      DestinationFile="MacExecZip"
      Overwrite="true"
    />
  </Target>
  <Target Name="CopyLinuxExeOnBuild" AfterTargets="AfterPublish" 
    Condition="$([MSBuild]::IsOSPlatform('Linux')) And Exists('bin/Debug/netcoreapp3.1/linux-x64/publish')">
    <Copy SourceFiles="bin/Debug/netcoreapp3.1/linux-x64/publish/APIMocker" DestinationFolder="LinuxExec" />
    <Copy SourceFiles="bin/Debug/netcoreapp3.1/linux-x64/publish/appsettings.json" DestinationFolder="LinuxExec" />
    <ZipDirectory
      SourceDirectory="LinuxExec"
      DestinationFile="LinuxExecZip"
      Overwrite="true"
    />
  </Target>
</Project>
